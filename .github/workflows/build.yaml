name: Build Moseq-Reports

on:
  push:
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    env:
      ARTIFACT_NAME: "build-${{ matrix.os }}"
      ARTIFACT_DEST: "build-${{ matrix.os }}.zip"

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Decode and Prep Windows Cert
        if: ${{ runner.os == 'Windows' }}
        id: windows_pfx
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "win-certificate.pfx"
          encodedString: ${{secrets.WINDOWS_CERTIFICATE_P12}}

      - name: Windows Add Variables to Path
        if: ${{ runner.os == 'Windows' }}
        env:
          CERT_PATH: ${{steps.windows_pfx.outputs.filePath}}
          CERT_PASSWORD: ${{secrets.WINDOWS_CERTIFICATE_PSWD}}
        run: |
          echo CSC_LINK=${CERT_PATH} >> $GITHUB_ENV
          echo CSC_KEY_PASSWORD=${CERT_PASSWORD} >> $GITHUB_ENV
          certutil -p "${{secrets.WINDOWS_CERTIFICATE_PSWD}}" -importpfx "${{steps.windows_pfx.outputs.filePath}}"

      #   if: ${{ runner.os == 'macOS' }}
      #   run: |
      #     unset CSC_LINK
      #     unset CSC_KEY_PASSWORD

      # - name: Prep Linux Cert
      #   if: ${{ runner.os == 'Linux' }}
      #   run: |
      #     unset CSC_LINK
      #     unset CSC_KEY_PASSWORD

      - name: Install
        run: npm install

      - name: Version
        run: |
          echo PACKAGE_VERSION=$(npm run --silent version) >> $GITHUB_ENV

      - name: Linting
        run: npm run lint

      - name: Git Tag
        run: git tag ${{ env.PACKAGE_VERSION }}

      - name: Package (release)
        if: ${{ endsWith(github.ref, 'master') }}
        env:
          GH_TOKEN: ${{secrets.SERVICE_ACCOUNT_TOKEN}}
        run: |
          npm run package-release

      - name: Package (dev)
        if: ${{ !endsWith(github.ref, 'master') }}
        run: npm run package

      - name: Zip package
        run: 7z a ${{ env.ARTIFACT_DEST }} ./dist_electron/*

      #- name: Upload build artifacts
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: ${{ env.ARTIFACT_NAME }}
      #    path: ${{ env.ARTIFACT_DEST }}
