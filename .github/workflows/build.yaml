name: Build Moseq-Reports

on:
  push:
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Decode and Prep Windows Cert
        if: ${{ runner.os == 'Windows' }}
        id: windows_pfx
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "win-certificate.pfx"
          encodedString: ${{secrets.WINDOWS_CERTIFICATE_P12}}

      - name: Windows Add Variables to Path
        if: ${{ runner.os == 'Windows' }}
        env:
          CERT_PATH: ${{steps.windows_pfx.outputs.filePath}}
          CERT_PASSWORD: ${{secrets.WINDOWS_CERTIFICATE_PSWD}}
        run: |
          echo CSC_LINK=${CERT_PATH} >> $GITHUB_ENV
          echo CSC_KEY_PASSWORD=${CERT_PASSWORD} >> $GITHUB_ENV

      #   if: ${{ runner.os == 'macOS' }}
      #   run: |
      #     unset CSC_LINK
      #     unset CSC_KEY_PASSWORD

      # - name: Prep Linux Cert
      #   if: ${{ runner.os == 'Linux' }}
      #   run: |
      #     unset CSC_LINK
      #     unset CSC_KEY_PASSWORD

      - name: Install
        run: npm install

      - name: Version
        run: |
          echo PACKAGE_VERSION=$(npm run --silent version) >> $GITHUB_ENV

      - name: Linting
        run: npm run lint

      - name: Add Service Account Token to Env
        # if: ${{ github.ref == '/refs/heads/master' }}
        env:
          ACCOUNT_TOKEN: ${{secrets.SERVICE_ACCOUNT_TOKEN}}
        run: |
          echo GH_TOKEN=${ACCOUNT_TOKEN} >> $GITHUB_ENV

      - name: Git Tag
        run: git tag ${{ env.PACKAGE_VERSION }}

      - name: Package (release)
        # if: ${{ github.ref == '/refs/heads/master' }}
        run: npm run package-release
      # - name: Package (dev)
      # if: ${{ github.ref != '/refs/heads/master' }}
      # run: npm run package
