(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{434:function(t,e,o){"use strict";o.r(e);var n=o(25),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",[t._v("Position Plot Options")]),t._v(" "),o("h2",{attrs:{id:"computed"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[t._v("#")]),t._v(" Computed")]),t._v(" "),o("ol",[o("li",[o("p",[o("code",{pre:!0},[t._v("mode")]),t._v(" : returns current mode of position plot. If changed, value will be updated in component through "),o("code",{pre:!0},[t._v("updateComponentSettings")]),t._v(" mutation in store.")])]),t._v(" "),o("li",[o("p",[o("code",{pre:!0},[t._v("resolution")]),t._v(": returns resolution of Position Plot. If changed, value will be updated in component through "),o("code",{pre:!0},[t._v("updateComponentSettings")]),t._v(" mutation in store.")])]),t._v(" "),o("li",[o("p",[o("code",{pre:!0},[t._v("colorscale")]),t._v(": returns color scheme of current Position plot. If changed, value will be updated in component through #UpdateComponentSettings.")])]),t._v(" "),o("li")])])}),[],!1,null,null,null);e.default=r.exports}}]);