(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{436:function(e,t,o){"use strict";o.r(t);var n=o(25),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",[e._v("Scalar Data Options")]),e._v(" "),o("ol",[o("li",[o("code",{pre:!0},[e._v("metric")]),e._v(" : returns current metric. If changed, value is updated through the "),o("code",{pre:!0},[e._v("updateComponentSettings")]),e._v(" in the store.")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("point_size")]),e._v(": returns size of data points. If changed, value is updated through the "),o("code",{pre:!0},[e._v("updateComponentSettings")]),e._v(" mutation in the store.")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("show_boxplot")]),e._v(": boolean that determines whether boxplot will be shown. If changed, the value is updated through "),o("code",{pre:!0},[e._v("updateComponentSettings")]),e._v(" in the store.")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("boxplot_whiskers")]),e._v(": Whisker data that determines the type of whisker the Boxplot has.\n"),o("code",{pre:!0},[e._v("show_violinplot")]),e._v(": boolean that determines whether illusion will be played. If changed, value is updated through the "),o("code",{pre:!0},[e._v("updateComponentSettings")]),e._v(" in the store.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);