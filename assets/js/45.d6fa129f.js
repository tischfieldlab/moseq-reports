(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{427:function(e,t,a){"use strict";a.r(t);var s=a(25),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",[e._v("Detailed Usage")]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("ol",[a("li",[a("code",{pre:!0},[e._v("format_tooltip")]),e._v(": Updates the titles of the data on the graph")])]),e._v(" "),a("h2",{attrs:{id:"computed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[e._v("#")]),e._v(" Computed")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("`selectedSyllable`: returns new selected syllable based on change in dataview\n`countMethod`: returns the count method based on change in dataview\n`groupNames`: returns group names, will change based on `group_order_type` property in settings.\n`groupColors`: returns group Colors based on change in dataview\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);