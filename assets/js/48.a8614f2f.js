(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{430:function(e,t,o){"use strict";o.r(t);var r=o(25),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",[e._v("Individual Usage Heatmap Options")]),e._v(" "),o("h2",{attrs:{id:"computed"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[e._v("#")]),e._v(" Computed")]),e._v(" "),o("ol",[o("li",[o("code",{pre:!0},[e._v("selectedGroups")]),e._v(": returns current selectedGroup is changes occur to value of "),o("code",{pre:!0},[e._v("this.dataview.selectedGroup")]),e._v(".")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("colorscale")]),e._v(": returns colormap of data. Can update value of colormap if changed through signaling vue store to commit the "),o("code",{pre:!0},[e._v("updateComponentSettings")]),e._v(" mutation.")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("syllable_order_type")]),e._v(": returns the type of ordering for a syllable. Can update the value if changed through signaling vue store to commit the "),o("code",{pre:!0},[e._v("updateComponentSettings")]),e._v(" mutation.")]),e._v(" "),o("li",[o("code",{pre:!0},[e._v("syllable_order_dataset")]),e._v(": returns order for dataset. Can update the current order if changed through signaling vue store to commit the "),o("code",{pre:!0},[e._v("updateComponentSettings")]),e._v(" mutation.")])])])}),[],!1,null,null,null);t.default=a.exports}}]);